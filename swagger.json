{
  "swagger": "2.0",
  "info": {
    "description": "This is an API that enables users to send and recieve text messages. It is Nodejs API built using the express framework and postgres as the data store",
    "version": "1.0.0",
    "title": "Sms management API"
  },
  "host": "sms-mngt-api.herokuapp.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/sms": {
      "post": {
        "tags": [
          "sms"
        ],
        "summary": "Create a new message",
        "description": "",
        "operationId": "createSms",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "sending  a new message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Sms"
            }
          }
        ],
        "responses": {
          "422": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "tags": [
          "sms"
        ],
        "summary": "get all sms",
        "description": "get all the sms in the system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Sms"
              }
            }
          }
        }
      }
    },
    "/sms/{smsId}": {
      "get": {
        "tags": [
          "sms"
        ],
        "summary": "Find pet by ID",
        "description": "Returns a single sms",
        "operationId": "getSmsById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "smsId",
            "in": "path",
            "description": "ID of sms to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Sms"
            }
          },
          "404": {
            "description": "Sms not found"
          },
          "422": {
            "description": "Invalid ID supplied"
          }
        }
      },
      "delete": {
        "tags": [
          "sms"
        ],
        "summary": "delete sms",
        "description": "delete an sms with given id",
        "operationId": "deleteSms",
        "parameters": [
          {
            "name": "smsId",
            "in": "path",
            "description": "ID of sms to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Sms not found"
          },
          "422": {
            "description": "Invalid ID supplied"
          }
        }
      }
    },
    "/contacts": {
      "post": {
        "tags": [
          "contacts"
        ],
        "summary": "create a new contact",
        "description": "",
        "operationId": "createcontact",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "creating a new contact",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          }
        ],
        "responses": {
          "422": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "tags": [
          "contacts"
        ],
        "summary": "get all contacts",
        "description": "get all the contacts in the system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "/definitions/Contact"
              }
            }
          }
        }
      }
    },
    "/contacts/{contactId}": {
      "get": {
        "tags": [
          "contacts"
        ],
        "summary": "Find contact by ID",
        "description": "Returns a single contact",
        "operationId": "getContactById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "description": "ID of contact to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          },
          "404": {
            "description": "Contact not found"
          },
          "422": {
            "description": "Invalid ID supplied"
          }
        }
      },
      "delete": {
        "tags": [
          "contacts"
        ],
        "summary": "delete contact",
        "description": "delete an sms with given id",
        "operationId": "deleteContact",
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "description": "ID of contact to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "contact not found"
          },
          "422": {
            "description": "Invalid ID supplied"
          }
        }
      }
    }
  },
  "definitions": {
    "Sms": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "message to be sent"
        },
        "sender": {
          "type": "string",
          "description": "the phone number of message sender"
        },
        "receiver": {
          "type": "string",
          "description": "the phone number of message recipient"
        }
      }
    },
    "Contact": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "the name of phone owner"
        },
        "phone": {
          "type": "string",
          "description": "phone number"
        }
      }
    }
  }
}